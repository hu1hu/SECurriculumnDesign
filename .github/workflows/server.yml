name: Spring Boot CI/CD with Docker

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
      INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
      KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      GITEE_CLIENT_ID: ${{ secrets.GITEE_CLIENT_ID }}
      GITEE_CLIENT_SECRET: ${{ secrets.GITEE_CLIENT_SECRET }}
      GITHUB_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      WEICHAT_OPEN_CLIENT_ID: ${{ secrets.WEICHAT_OPEN_CLIENT_ID }}
      WEICHAT_OPEN_CLIENT_SECRET: ${{ secrets.WEICHAT_OPEN_CLIENT_SECRET }}
      ALIYUN_ACCESS_KEY_ID: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
      ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
          cache-dependency-path: './server/pom.xml' # optional
      
      - name: Build with Maven
        run: mvn clean package
        working-directory: ./server
    
      # 镜像名称 在当前目录
      - name: Build Docker image
        run: docker build -t pim-server .
        working-directory: ./server
        
      - name: Save Docker image
        run: docker save pim-server > pim-server.tar
        working-directory: ./server
    
      - name: Copy Docker image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./server/pim-server.tar"
          target: "./temp"

      - name: Load Docker image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: docker load < ./temp/server/pim-server.tar
          
      - name: Run Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker stop pim-server-container || true
            docker rm pim-server-container || true
            
            # 运行新的容器实例，并传递环境变量
            docker run -d
              -p 8000:8000 \
              -e DATASOURCE_URL=${{ secrets.DATASOURCE_URL }} \
              -e DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }} \
              -e DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }} \
              -e REDIS_HOST=${{ secrets.REDIS_HOST }} \
              -e REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} \
              -e REDIS_PORT=${{ secrets.REDIS_PORT }} \
              -e INFLUXDB_URL=${{ secrets.INFLUXDB_URL }} \
              -e INFLUXDB_TOKEN=${{ secrets.INFLUXDB_TOKEN }} \
              -e KAFKA_BOOTSTRAP_SERVERS=${{ secrets.KAFKA_BOOTSTRAP_SERVERS }} \
              -e USERNAME=${{ secrets.USERNAME }}
              -e PASSWORD=${{ secrets.PASSWORD }}
              -e GITEE_CLIENT_ID=${{ secrets.GITEE_CLIENT_ID }} \
              -e GITEE_CLIENT_SECRET=${{ secrets.GITEE_CLIENT_SECRET }} \
              -e GITHUB_CLIENT_ID=${{ secrets.CLIENT_ID }} \
              -e GITHUB_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} \
              -e WEICHAT_OPEN_CLIENT_ID=${{ secrets.WEICHAT_OPEN_CLIENT_ID }} \
              -e WEICHAT_OPEN_CLIENT_SECRET=${{ secrets.WEICHAT_OPEN_CLIENT_SECRET }} \
              -e ALIYUN_ACCESS_KEY_ID=${{ secrets.ALIYUN_ACCESS_KEY_ID }} \
              -e ALIYUN_ACCESS_KEY_SECRET=${{ secrets.ALIYUN_ACCESS_KEY_SECRET }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              --name pim-server-container \
              pim-server
